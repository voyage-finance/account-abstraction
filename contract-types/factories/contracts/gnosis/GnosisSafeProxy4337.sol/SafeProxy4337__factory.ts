/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SafeProxy4337,
  SafeProxy4337Interface,
} from "../../../../contracts/gnosis/GnosisSafeProxy4337.sol/SafeProxy4337";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "singleton",
        type: "address",
      },
      {
        internalType: "contract EIP4337Manager",
        name: "aaModule",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161030e38038061030e83398101604081905261002f91610193565b826001600160a01b0381166100965760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b60648201526084015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392831617815560405185831660248201528483166044820181905292841660648201529091829160840160408051601f198184030181529181526020820180516001600160e01b031663aba3c0b560e01b1790525161010b9190610210565b600060405180830381855af49150503d8060008114610146576040519150601f19603f3d011682016040523d82523d6000602084013e61014b565b606091505b50915091508181906101705760405162461bcd60e51b815260040161008d919061022c565b50505050505061025f565b6001600160a01b038116811461019057600080fd5b50565b6000806000606084860312156101a857600080fd5b83516101b38161017b565b60208501519093506101c48161017b565b60408501519092506101d58161017b565b809150509250925092565b60005b838110156101fb5781810151838201526020016101e3565b8381111561020a576000848401525b50505050565b600082516102228184602087016101e0565b9190910192915050565b602081526000825180602084015261024b8160408501602087016101e0565b601f01601f19169190910160400192915050565b60a18061026d6000396000f3fe6080604052600073ffffffffffffffffffffffffffffffffffffffff8154167fa619486e00000000000000000000000000000000000000000000000000000000823503604d57808252602082f35b3682833781823684845af490503d82833e806066573d82fd5b503d81f3fea26469706673582212200cfc934f2557a5f186fbd75d981eb0aa371946ff813dd620cf46df3b2b08a0ec64736f6c634300080f0033";

type SafeProxy4337ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeProxy4337ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeProxy4337__factory extends ContractFactory {
  constructor(...args: SafeProxy4337ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    singleton: PromiseOrValue<string>,
    aaModule: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SafeProxy4337> {
    return super.deploy(
      singleton,
      aaModule,
      owner,
      overrides || {}
    ) as Promise<SafeProxy4337>;
  }
  override getDeployTransaction(
    singleton: PromiseOrValue<string>,
    aaModule: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      singleton,
      aaModule,
      owner,
      overrides || {}
    );
  }
  override attach(address: string): SafeProxy4337 {
    return super.attach(address) as SafeProxy4337;
  }
  override connect(signer: Signer): SafeProxy4337__factory {
    return super.connect(signer) as SafeProxy4337__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeProxy4337Interface {
    return new utils.Interface(_abi) as SafeProxy4337Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeProxy4337 {
    return new Contract(address, _abi, signerOrProvider) as SafeProxy4337;
  }
}
