/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  EntryPoint,
  EntryPointInterface,
} from "../../../contracts/core/EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredFund",
        type: "uint256",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prefund",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "paymasterStake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymasterUnstakeDelay",
            type: "uint256",
          },
        ],
        internalType: "struct IEntryPoint.PaymasterInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "SimulationResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prefund",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "paymasterStake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymasterUnstakeDelay",
            type: "uint256",
          },
        ],
        internalType: "struct IEntryPoint.PaymasterInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "actualAggregator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "aggregatorStake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "aggregatorUnstakeDelay",
            type: "uint256",
          },
        ],
        internalType: "struct IEntryPoint.AggregationInfo",
        name: "aggregationInfo",
        type: "tuple",
      },
    ],
    name: "SimulationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "withdrawTime",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "withdrawTime",
            type: "uint64",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a0604052604051620000129062000050565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b506001600160a01b03166080523480156200004957600080fd5b506200005e565b61023380620040bc83390190565b60805161403b62000081600039600081816110fb0152612e5f015261403b6000f3fe6080604052600436106100e15760003560e01c80639b249f691161007f578063bb9fe6bf11610059578063bb9fe6bf14610395578063c23a5cea146103aa578063ee219423146103ca578063fc7e286d146103ea57600080fd5b80639b249f6914610342578063a619353114610362578063b760faf91461038257600080fd5b8063205c2878116100bb578063205c28781461015c5780634b1d7cf51461017c5780635287ce121461019c57806370a08231146102ef57600080fd5b80630396cb60146100f65780631d732756146101095780631fad948c1461013c57600080fd5b366100f1576100ef336104c8565b005b600080fd5b6100ef610104366004613182565b610543565b34801561011557600080fd5b506101296101243660046132e7565b6108c7565b6040519081526020015b60405180910390f35b34801561014857600080fd5b506100ef61015736600461348e565b610a32565b34801561016857600080fd5b506100ef6101773660046134e5565b610b5b565b34801561018857600080fd5b506100ef61019736600461348e565b610d5d565b3480156101a857600080fd5b5061028e6101b7366004613511565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091525073ffffffffffffffffffffffffffffffffffffffff1660009081526020818152604091829020825160a08101845281546dffffffffffffffffffffffffffff80821683526e010000000000000000000000000000820460ff161515948301949094526f0100000000000000000000000000000090049092169282019290925260019091015463ffffffff81166060830152640100000000900467ffffffffffffffff16608082015290565b6040805182516dffffffffffffffffffffffffffff908116825260208085015115159083015283830151169181019190915260608083015163ffffffff169082015260809182015167ffffffffffffffff169181019190915260a001610133565b3480156102fb57600080fd5b5061012961030a366004613511565b73ffffffffffffffffffffffffffffffffffffffff166000908152602081905260409020546dffffffffffffffffffffffffffff1690565b34801561034e57600080fd5b506100ef61035d36600461352e565b6110be565b34801561036e57600080fd5b5061012961037d366004613570565b6111c0565b6100ef610390366004613511565b6104c8565b3480156103a157600080fd5b506100ef611202565b3480156103b657600080fd5b506100ef6103c5366004613511565b61138b565b3480156103d657600080fd5b506100ef6103e5366004613570565b61168f565b3480156103f657600080fd5b50610479610405366004613511565b600060208190529081526040902080546001909101546dffffffffffffffffffffffffffff808316926e010000000000000000000000000000810460ff16926f010000000000000000000000000000009091049091169063ffffffff811690640100000000900467ffffffffffffffff1685565b604080516dffffffffffffffffffffffffffff96871681529415156020860152929094169183019190915263ffffffff16606082015267ffffffffffffffff909116608082015260a001610133565b6104d281346119db565b73ffffffffffffffffffffffffffffffffffffffff811660008181526020818152604091829020805492516dffffffffffffffffffffffffffff909316835292917f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c491015b60405180910390a25050565b33600090815260208190526040902063ffffffff82166105c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c617900000000000060448201526064015b60405180910390fd5b600181015463ffffffff908116908316101561063c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d650000000060448201526064016105bb565b805460009061066f9034906f0100000000000000000000000000000090046dffffffffffffffffffffffffffff166135db565b9050600081116106db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f207374616b6520737065636966696564000000000000000000000000000060448201526064016105bb565b6dffffffffffffffffffffffffffff8110610752576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f7374616b65206f766572666c6f7700000000000000000000000000000000000060448201526064016105bb565b6040805160a08101825283546dffffffffffffffffffffffffffff90811682526001602080840182815286841685870190815263ffffffff808b16606088019081526000608089018181523380835296829052908a9020985189549551945189166f01000000000000000000000000000000027fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff9515156e010000000000000000000000000000027fffffffffffffffffffffffffffffffffff0000000000000000000000000000009097169190991617949094179290921695909517865551949092018054925167ffffffffffffffff16640100000000027fffffffffffffffffffffffffffffffffffffffff000000000000000000000000909316949093169390931717905590517fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01906108ba908490879091825263ffffffff16602082015260400190565b60405180910390a2505050565b6000805a90503330146108d957600080fd5b8451600087156109d057600080836000015173ffffffffffffffffffffffffffffffffffffffff1684604001518c8c6040516109169291906135f3565b60006040518083038160008787f1925050503d8060008114610954576040519150601f19603f3d011682016040523d82523d6000602084013e610959565b606091505b5091509150816109cd578051156109c857836000015173ffffffffffffffffffffffffffffffffffffffff1689602001517f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a2018660200151846040516109bf929190613679565b60405180910390a35b600192505b50505b600087608001515a8503019050610a226000838a8a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250611ad8915050565b9450505050505b95945050505050565b8160008167ffffffffffffffff811115610a4e57610a4e6131f1565b604051908082528060200260200182016040528015610a8757816020015b610a746130de565b815260200190600190039081610a6c5790505b50905060005b82811015610ae857610ade81878784818110610aab57610aab613692565b9050602002810190610abd91906136c1565b848481518110610acf57610acf613692565b60200260200101516000611ed5565b5050600101610a8d565b506000805b83811015610b4857610b3c81888884818110610b0b57610b0b613692565b9050602002810190610b1d91906136c1565b858481518110610b2f57610b2f613692565b6020026020010151612127565b90910190600101610aed565b50610b53848261220d565b505050505050565b33600090815260208190526040902080546dffffffffffffffffffffffffffff16821115610be5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c617267650000000000000060448201526064016105bb565b8054610c029083906dffffffffffffffffffffffffffff166136ff565b81547fffffffffffffffffffffffffffffffffffff0000000000000000000000000000166dffffffffffffffffffffffffffff919091161781556040805173ffffffffffffffffffffffffffffffffffffffff851681526020810184905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb910160405180910390a260008373ffffffffffffffffffffffffffffffffffffffff168360405160006040518083038185875af1925050503d8060008114610ce7576040519150601f19603f3d011682016040523d82523d6000602084013e610cec565b606091505b5050905080610d57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6661696c656420746f207769746864726177000000000000000000000000000060448201526064016105bb565b50505050565b816000805b82811015610db757858582818110610d7c57610d7c613692565b9050602002810190610d8e9190613716565b610d98908061374a565b610da39150836135db565b915080610daf816137b2565b915050610d62565b5060008167ffffffffffffffff811115610dd357610dd36131f1565b604051908082528060200260200182016040528015610e0c57816020015b610df96130de565b815260200190600190039081610df15790505b5090506000805b84811015610fd55736888883818110610e2e57610e2e613692565b9050602002810190610e409190613716565b9050366000610e4f838061374a565b90925090506000610e666040850160208601613511565b90508160005b81811015610edf57610ebc88868684818110610e8a57610e8a613692565b9050602002810190610e9c91906136c1565b8b8b81518110610eae57610eae613692565b602002602001015186611ed5565b50508780610ec9906137b2565b9850508080610ed7906137b2565b915050610e6c565b5073ffffffffffffffffffffffffffffffffffffffff821615610fbd5773ffffffffffffffffffffffffffffffffffffffff821663e3563a4f8585610f2760408a018a6137ea565b6040518563ffffffff1660e01b8152600401610f469493929190613a00565b60006040518083038186803b158015610f5e57600080fd5b505afa925050508015610f6f575060015b610fbd576040517f86a9f75000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024016105bb565b50505050508080610fcd906137b2565b915050610e13565b50600080915060005b858110156110a95736898983818110610ff957610ff9613692565b905060200281019061100b9190613716565b905036600061101a838061374a565b90925090508060005b81811015611091576110658885858481811061104157611041613692565b905060200281019061105391906136c1565b8b8b81518110610b2f57610b2f613692565b61106f90886135db565b96508761107b816137b2565b9850508080611089906137b2565b915050611023565b505050505080806110a1906137b2565b915050610fde565b506110b4868261220d565b5050505050505050565b6040517f570e1a3600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063570e1a36906111329085908590600401613ab7565b6020604051808303816000875af1158015611151573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111759190613acb565b6040517f6ca7b80600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911660048201526024016105bb565b60006111cb826122fc565b6040805160208101929092523090820152466060820152608001604051602081830303815290604052805190602001209050919050565b3360009081526020819052604081206001810154909163ffffffff9091169003611258576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb90613ae8565b80546e010000000000000000000000000000900460ff166112d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f616c726561647920756e7374616b696e6700000000000000000000000000000060448201526064016105bb565b60018101546000906112ed9063ffffffff1642613b2b565b6001830180547fffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffff1664010000000067ffffffffffffffff84169081029190911790915583547fffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffff16845560405190815290915033907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602001610537565b33600090815260208190526040902080546f0100000000000000000000000000000090046dffffffffffffffffffffffffffff1680611426576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f207374616b6520746f20776974686472617700000000000000000000000060448201526064016105bb565b6001820154640100000000900467ffffffffffffffff166114a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b65282920666972737400000060448201526064016105bb565b60018201544264010000000090910467ffffffffffffffff161115611524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f7420647565000000000060448201526064016105bb565b6001820180547fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016905581547fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff1682556040805173ffffffffffffffffffffffffffffffffffffffff851681526020810183905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3910160405180910390a260008373ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461161f576040519150601f19603f3d011682016040523d82523d6000602084013e611624565b606091505b5050905080610d57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b65000000000000000060448201526064016105bb565b60005a905061169c6130de565b6000806116ad600086856001611ed5565b60408501519193509150600060c08701355a6116c990886136ff565b6116d391906135db565b905060006117ba866000015160a001516040805160a0810182526000808252602082018190529181018290526060810182905260808101919091525073ffffffffffffffffffffffffffffffffffffffff1660009081526020818152604091829020825160a08101845281546dffffffffffffffffffffffffffff80821683526e010000000000000000000000000000820460ff161515948301949094526f0100000000000000000000000000000090049092169282019290925260019091015463ffffffff81166060830152640100000000900467ffffffffffffffff16608082015290565b604080518082018252908201516dffffffffffffffffffffffffffff168152606082015163ffffffff16602082015290915073ffffffffffffffffffffffffffffffffffffffff8616156119a1576118e3866040805160a0810182526000808252602082018190529181018290526060810182905260808101919091525073ffffffffffffffffffffffffffffffffffffffff1660009081526020818152604091829020825160a08101845281546dffffffffffffffffffffffffffff80821683526e010000000000000000000000000000820460ff161515948301949094526f0100000000000000000000000000000090049092169282019290925260019091015463ffffffff81166060830152640100000000900467ffffffffffffffff16608082015290565b604080516060808201835273ffffffffffffffffffffffffffffffffffffffff8a81168352848401516dffffffffffffffffffffffffffff1660208085019182529286015163ffffffff1684860190815294517f2c2adbcc000000000000000000000000000000000000000000000000000000008152600481018a9052602481018b9052604481018c905287516064820152928701516084840152835190911660a48301525160c4820152915160e4830152919350610104016105bb565b828486836040517f9adb6dea0000000000000000000000000000000000000000000000000000000081526004016105bb9493929190613b57565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604081208054909190611a209084906dffffffffffffffffffffffffffff166135db565b90506dffffffffffffffffffffffffffff811115611a9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6465706f736974206f766572666c6f770000000000000000000000000000000060448201526064016105bb565b81547fffffffffffffffffffffffffffffffffffff0000000000000000000000000000166dffffffffffffffffffffffffffff919091161790555050565b6000805a855190915060009081611aee82612315565b60a083015190915073ffffffffffffffffffffffffffffffffffffffff8116611b1a5782519350611d5c565b809350600088511115611d5c57868202955060028a6002811115611b4057611b40613b81565b14611bd85760608301516040517fa9a2340900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169163a9a2340991611ba0908e908d908c90600401613bb0565b600060405180830381600088803b158015611bba57600080fd5b5087f1158015611bce573d6000803e3d6000fd5b5050505050611d5c565b60608301516040517fa9a2340900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169163a9a2340991611c33908e908d908c90600401613bb0565b600060405180830381600088803b158015611c4d57600080fd5b5087f193505050508015611c5f575060015b611d5c57611c6b613c10565b806308c379a003611cc75750611c7f613c2c565b80611c8a5750611cc9565b8b82826000806040517f994fdfd50000000000000000000000000000000000000000000000000000000081526004016105bb959493929190613cd4565b505b6040517f994fdfd5000000000000000000000000000000000000000000000000000000008152600481018c905273ffffffffffffffffffffffffffffffffffffffff8216602482015260a06044820152600d60a48201527f706f73744f70207265766572740000000000000000000000000000000000000060c4820152600060648201819052608482015260e4016105bb565b5a85038701965081870295508589604001511015611e07576040517f994fdfd5000000000000000000000000000000000000000000000000000000008152600481018c905273ffffffffffffffffffffffffffffffffffffffff8216602482015260a06044820152601b60a48201527f70726566756e642062656c6f772061637475616c476173436f7374000000000060c4820152600060648201819052608482015260e4016105bb565b6040890151869003611e1985826119db565b6000808c6002811115611e2e57611e2e613b81565b1490508460a0015173ffffffffffffffffffffffffffffffffffffffff16856000015173ffffffffffffffffffffffffffffffffffffffff168c602001517f33fd4d1f25a5461bea901784a6571de6debc16cd0831932c22c6969cd73ba99488602001518c8987604051611ebd9493929190938452602084019290925260408301521515606082015260800190565b60405180910390a45050505050505095945050505050565b60008060005a8551909150611eea8782612345565b611ef3876111c0565b6020870152604081015160608201516080830151171760e088013517610100880135176effffffffffffffffffffffffffffff811115611f8f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f6761732076616c756573206f766572666c6f770000000000000000000000000060448201526064016105bb565b600080611f9b84612465565b9050611faa8b8b8b8b856124c0565b90985096509150611fba43600052565b60a084015160609073ffffffffffffffffffffffffffffffffffffffff161561200e576000611fec8d8d8d8688612970565b90925090508015801590611fff57508781105b15612008578097505b5061201f565b506040805160208101909152600081525b60005a87039050808c60a0013510156120f85760a08601516040517f994fdfd50000000000000000000000000000000000000000000000000000000081526105bb918f91600090819060040193845273ffffffffffffffffffffffffffffffffffffffff92909216602084015260a0604084018190526023908401527f55736564206d6f7265207468616e20766572696669636174696f6e4761734c6960c08401527f6d6974000000000000000000000000000000000000000000000000000000000060e0840152606083015260808201526101000190565b60408b018390528160608c015260c08c01355a8803018b60800181815250505050505050505094509492505050565b6000805a9050600061213a846060015190565b905030631d73275661214f60608801886137ea565b87856040518563ffffffff1660e01b81526004016121709493929190613d1d565b6020604051808303816000875af19250505080156121c9575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526121c691810190613dde565b60015b61220157600084608001515a6121df90856136ff565b6121e991906135db565b90506121f9876002878585611ad8565b935050612204565b92505b50509392505050565b73ffffffffffffffffffffffffffffffffffffffff821661228a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f696e76616c69642062656e65666963696172790000000000000000000000000060448201526064016105bb565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146122e4576040519150601f19603f3d011682016040523d82523d6000602084013e6122e9565b606091505b50509050806122f757600080fd5b505050565b600061230782612d26565b805190602001209050919050565b60c081015160e082015160009190808203612331575092915050565b61233d82488301612d65565b949350505050565b6123526020830183613511565b73ffffffffffffffffffffffffffffffffffffffff16815260208083013590820152608080830135604083015260a0830135606083015260c0808401359183019190915260e08084013591830191909152610100830135908201523660006123be6101208501856137ea565b90925090508015612458576014811015612434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f696e76616c6964207061796d6173746572416e6444617461000000000000000060448201526064016105bb565b612442601460008385613df7565b61244b91613e21565b60601c60a0840152610d57565b600060a084015250505050565b60a0810151600090819073ffffffffffffffffffffffffffffffffffffffff16612490576001612493565b60035b60ff16905060008360800151828560600151028560400151010190506124b884612315565b029392505050565b6000806000805a87519091506124e38a826124de60408d018d6137ea565b612d7d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff8816016125bf57806000015173ffffffffffffffffffffffffffffffffffffffff16633ad59dbc6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156125a9575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526125a691810190613acb565b60015b6125b957600093508396506125bf565b96508693505b805160a08201516000919073ffffffffffffffffffffffffffffffffffffffff81166126315773ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020546dffffffffffffffffffffffffffff1689811161262a57808a0361262d565b60005b9350505b8173ffffffffffffffffffffffffffffffffffffffff16630825d1fc85606001518e8e602001518e886040518663ffffffff1660e01b81526004016126799493929190613e69565b60206040518083038160008887f1935050505080156126d3575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526126d091810190613dde565b60015b612796576126df613c10565b806308c379a00361273c57506126f3613c2c565b806126fe575061273e565b8d6000826000806040517f994fdfd50000000000000000000000000000000000000000000000000000000081526004016105bb959493929190613cd4565b505b6040517f994fdfd5000000000000000000000000000000000000000000000000000000008152600481018e905260006024820181905260a0604483015260a4820181905260648201819052608482015260c4016105bb565b80158015906127a457504281105b15612827576040517f994fdfd5000000000000000000000000000000000000000000000000000000008152600481018f905260006024820181905260a06044830152600760a48301527f657870697265640000000000000000000000000000000000000000000000000060c483015260648201819052608482015260e4016105bb565b955073ffffffffffffffffffffffffffffffffffffffff811661295b5773ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902080546dffffffffffffffffffffffffffff16808b111561291f578e6000828d6040517f994fdfd50000000000000000000000000000000000000000000000000000000081526004016105bb949392919093845273ffffffffffffffffffffffffffffffffffffffff92909216602084015260a060408401819052601c908401527f6163636f756e74206469646e2774207061792070726566756e6420780000000060c08401526060830152608082015260e00190565b81547fffffffffffffffffffffffffffffffffffff000000000000000000000000000016908b90036dffffffffffffffffffffffffffff161790555b5a850397505050505050955095509592505050565b825160a081015173ffffffffffffffffffffffffffffffffffffffff811660009081526020819052604081208054606094929391906dffffffffffffffffffffffffffff8116906e010000000000000000000000000000900460ff1680612a0c578b846000806040517f994fdfd50000000000000000000000000000000000000000000000000000000081526004016105bb9493929190613eae565b88821015612aa7576040517f994fdfd5000000000000000000000000000000000000000000000000000000008152600481018d905273ffffffffffffffffffffffffffffffffffffffff8516602482015260a06044820152601960a48201527f7061796d6173746572206465706f73697420746f6f206c6f770000000000000060c4820152600060648201819052608482015260e4016105bb565b8882038360000160006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555060008886606001510390508473ffffffffffffffffffffffffffffffffffffffff1663f465c77e828e8e602001518e6040518563ffffffff1660e01b8152600401612b2d93929190613f20565b60006040518083038160008887f193505050508015612b8c57506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052612b899190810190613f45565b60015b612c6357612b98613c10565b806308c379a003612bf45750612bac613c2c565b80612bb75750612bf6565b8d86826000806040517f994fdfd50000000000000000000000000000000000000000000000000000000081526004016105bb959493929190613cd4565b505b6040517f994fdfd5000000000000000000000000000000000000000000000000000000008152600481018e905273ffffffffffffffffffffffffffffffffffffffff8616602482015260a06044820152600060a4820181905260648201819052608482015260c4016105bb565b8015801590612c7157504281105b15612d12578e876000806040517f994fdfd50000000000000000000000000000000000000000000000000000000081526004016105bb949392919093845273ffffffffffffffffffffffffffffffffffffffff92909216602084015260a0604084018190526007908401527f657870697265640000000000000000000000000000000000000000000000000060c08401526060830152608082015260e00190565b909e909d509b505050505050505050505050565b6060366000612d396101408501856137ea565b915091508360208184030360405194506020810185016040528085528082602087013750505050919050565b6000818310612d745781612d76565b825b9392505050565b8015610d5757825173ffffffffffffffffffffffffffffffffffffffff163b15612e1f576040517f994fdfd50000000000000000000000000000000000000000000000000000000081526004810185905260006024820181905260a06044830152601a60a48301527f73656e64657220616c726561647920636f6e737472756374656400000000000060c483015260648201819052608482015260e4016105bb565b6040517f570e1a3600000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063570e1a3690612e969086908690600401613ab7565b6020604051808303816000875af1158015612eb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ed99190613acb565b905073ffffffffffffffffffffffffffffffffffffffff8116612f74576040517f994fdfd50000000000000000000000000000000000000000000000000000000081526004810186905260006024820181905260a06044830152600f60a48301527f696e6974436f6465206661696c6564000000000000000000000000000000000060c483015260648201819052608482015260e4016105bb565b835173ffffffffffffffffffffffffffffffffffffffff82811691161461303a576040517f994fdfd50000000000000000000000000000000000000000000000000000000081526004810186905260006024820181905260a06044830152602560a48301527f73656e64657220646f65736e2774206d6174636820696e6974436f646520616460c48301527f647265737300000000000000000000000000000000000000000000000000000060e4830152606482018190526084820152610104016105bb565b8073ffffffffffffffffffffffffffffffffffffffff163b6000036130d7576040517f994fdfd50000000000000000000000000000000000000000000000000000000081526004810186905260006024820181905260a06044830152602060a48301527f696e6974436f6465206661696c656420746f206372656174652073656e64657260c483015260648201819052608482015260e4016105bb565b5050505050565b6040518060a0016040528061315d604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b8152602001600080191681526020016000815260200160008152602001600081525090565b60006020828403121561319457600080fd5b813563ffffffff81168114612d7657600080fd5b60008083601f8401126131ba57600080fd5b50813567ffffffffffffffff8111156131d257600080fd5b6020830191508360208285010111156131ea57600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60a0810181811067ffffffffffffffff82111715613240576132406131f1565b60405250565b610100810181811067ffffffffffffffff82111715613240576132406131f1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff821117156132ab576132ab6131f1565b6040525050565b73ffffffffffffffffffffffffffffffffffffffff811681146132d457600080fd5b50565b80356132e2816132b2565b919050565b60008060008060008587036101c081121561330157600080fd5b863567ffffffffffffffff8082111561331957600080fd5b6133258a838b016131a8565b90985096507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0929092019161018091508183121561336257600080fd5b60405161336e81613220565b6101008085121561337e57600080fd5b604051945061338c85613246565b61339860208c016132d7565b855260408b0135602086015260608b0135604086015260808b0135606086015260a08b013560808601526133ce60c08c016132d7565b60a086015260e08b81013560c0870152908b0135908501529283526101208901356020840152610140890135604084015261016089013560608401528189013560808401529194506101a0880135918083111561342a57600080fd5b5050613438888289016131a8565b969995985093965092949392505050565b60008083601f84011261345b57600080fd5b50813567ffffffffffffffff81111561347357600080fd5b6020830191508360208260051b85010111156131ea57600080fd5b6000806000604084860312156134a357600080fd5b833567ffffffffffffffff8111156134ba57600080fd5b6134c686828701613449565b90945092505060208401356134da816132b2565b809150509250925092565b600080604083850312156134f857600080fd5b8235613503816132b2565b946020939093013593505050565b60006020828403121561352357600080fd5b8135612d76816132b2565b6000806020838503121561354157600080fd5b823567ffffffffffffffff81111561355857600080fd5b613564858286016131a8565b90969095509350505050565b60006020828403121561358257600080fd5b813567ffffffffffffffff81111561359957600080fd5b82016101608185031215612d7657600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156135ee576135ee6135ac565b500190565b8183823760009101908152919050565b60005b8381101561361e578181015183820152602001613606565b83811115610d575750506000910152565b60008151808452613647816020860160208601613603565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b82815260406020820152600061233d604083018461362f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea18336030181126136f557600080fd5b9190910192915050565b600082821015613711576137116135ac565b500390565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18336030181126136f557600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261377f57600080fd5b83018035915067ffffffffffffffff82111561379a57600080fd5b6020019150600581901b36038213156131ea57600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036137e3576137e36135ac565b5060010190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261381f57600080fd5b83018035915067ffffffffffffffff82111561383a57600080fd5b6020019150368190038213156131ea57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261388457600080fd5b830160208101925035905067ffffffffffffffff8111156138a457600080fd5b8036038213156131ea57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60006101606139288461390e856132d7565b73ffffffffffffffffffffffffffffffffffffffff169052565b6020830135602085015261393f604084018461384f565b82604087015261395283870182846138b3565b92505050613963606084018461384f565b85830360608701526139768382846138b3565b925050506080830135608085015260a083013560a085015260c083013560c085015260e083013560e08501526101008084013581860152506101206139bd8185018561384f565b868403838801526139cf8482846138b3565b93505050506101406139e38185018561384f565b868403838801526139f58482846138b3565b979650505050505050565b6040808252810184905260006060600586901b830181019083018783805b89811015613aa0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa087860301845282357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea18c3603018112613a7e578283fd5b613a8a868d83016138fc565b9550506020938401939290920191600101613a1e565b5050505082810360208401526139f58185876138b3565b60208152600061233d6020830184866138b3565b600060208284031215613add57600080fd5b8151612d76816132b2565b602081526000613b2560208301600a81527f6e6f74207374616b656400000000000000000000000000000000000000000000602082015260400190565b92915050565b600067ffffffffffffffff808316818516808303821115613b4e57613b4e6135ac565b01949350505050565b84815260208082018590526040820184905282516060830152820151608082015260a08101610a29565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060038510613be9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84825260606020830152613c00606083018561362f565b9050826040830152949350505050565b600060033d1115613c295760046000803e5060005160e01c5b90565b600060443d1015613c3a5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff8160248401118184111715613c8857505050505090565b8285019150815181811115613ca05750505050505090565b843d8701016020828501011115613cba5750505050505090565b613cc960208286010187613267565b509095945050505050565b85815273ffffffffffffffffffffffffffffffffffffffff8516602082015260a060408201526000613d0960a083018661362f565b606083019490945250608001529392505050565b60006101c0808352613d3281840187896138b3565b9050845173ffffffffffffffffffffffffffffffffffffffff808251166020860152602082015160408601526040820151606086015260608201516080860152608082015160a08601528060a08301511660c08601525060c081015160e085015260e08101516101008501525060208501516101208401526040850151610140840152606085015161016084015260808501516101808401528281036101a08401526139f5818561362f565b600060208284031215613df057600080fd5b5051919050565b60008085851115613e0757600080fd5b83861115613e1457600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008135818116916014851015613e615780818660140360031b1b83161692505b505092915050565b608081526000613e7c60808301876138fc565b60208301959095525073ffffffffffffffffffffffffffffffffffffffff929092166040830152606090910152919050565b84815273ffffffffffffffffffffffffffffffffffffffff8416602082015260a060408201526000613f0d60a08301600a81527f6e6f74207374616b656400000000000000000000000000000000000000000000602082015260400190565b6060830194909452506080015292915050565b606081526000613f3360608301866138fc565b60208301949094525060400152919050565b60008060408385031215613f5857600080fd5b825167ffffffffffffffff80821115613f7057600080fd5b818501915085601f830112613f8457600080fd5b815181811115613f9657613f966131f1565b6040519150613fcd60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160183613267565b808252866020828501011115613fe257600080fd5b613ff3816020840160208601613603565b5060209490940151939593945050505056fea2646970667358221220f59f95b45f8441b624526fb1d070981792328699f2676f9446f9728be8bf56cd64736f6c634300080f0033608060405234801561001057600080fd5b50610213806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e3660046100f9565b61006c565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60008061007c601482858761016b565b61008591610195565b60601c90506000610099846014818861016b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af190506000519350806100f057600093505b50505092915050565b6000806020838503121561010c57600080fd5b823567ffffffffffffffff8082111561012457600080fd5b818501915085601f83011261013857600080fd5b81358181111561014757600080fd5b86602082850101111561015957600080fd5b60209290920196919550909350505050565b6000808585111561017b57600080fd5b8386111561018857600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000081358181169160148510156101d55780818660140360031b1b83161692505b50509291505056fea2646970667358221220271a908017a929e228d5c5dccd9cd18be2611a35e4b7aeb053bd168d1c5712b064736f6c634300080f0033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  override connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
