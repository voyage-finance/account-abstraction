/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestExpiryAccount,
  TestExpiryAccountInterface,
} from "../../../contracts/test/TestExpiryAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldEntryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newEntryPoint",
        type: "address",
      },
    ],
    name: "EntryPointChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addTemporaryOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "exec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "execBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execFromEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerDeadlines",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newEntryPoint",
        type: "address",
      },
    ],
    name: "updateEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015403803806200154083398101604081905262000034916200013a565b600180546001600160a01b0319166001600160a01b0384811691909117909155600080546001600160601b03166c01000000000000000000000000928416929092029190911790556200008a8160001962000092565b505062000179565b6200009c620000b8565b6001600160a01b03909116600090815260026020526040902055565b6000546c0100000000000000000000000090046001600160a01b0316331480620000e157503330145b6200011f5760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b604482015260640160405180910390fd5b565b6001600160a01b03811681146200013757600080fd5b50565b600080604083850312156200014e57600080fd5b82516200015b8162000121565b60208401519092506200016e8162000121565b809150509250929050565b6113b780620001896000396000f3fe6080604052600436106100e15760003560e01c80638da5cb5b1161007f578063affed0e011610059578063affed0e014610279578063b0d691fe1461029c578063c399ec88146102c7578063d0cb75fa146102dc57600080fd5b80638da5cb5b146101d7578063a3450e4414610239578063a9059cbb1461025957600080fd5b8063424a0b3e116100bb578063424a0b3e146101625780634a58db191461018f5780634d44560d1461019757806380c5c7d0146101b757600080fd5b80630565bb67146100ed5780630825d1fc1461010f5780631b71bb6e1461014257600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5061010d610108366004610fe7565b6102fc565b005b34801561011b57600080fd5b5061012f61012a366004611070565b61034b565b6040519081526020015b60405180910390f35b34801561014e57600080fd5b5061010d61015d3660046110d7565b610392565b34801561016e57600080fd5b5061012f61017d3660046110d7565b60026020526000908152604090205481565b61010d6103a6565b3480156101a357600080fd5b5061010d6101b23660046110fb565b610431565b3480156101c357600080fd5b5061010d6101d2366004610fe7565b6104e0565b3480156101e357600080fd5b50600054610214906c01000000000000000000000000900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610139565b34801561024557600080fd5b5061010d6102543660046110fb565b6104e8565b34801561026557600080fd5b5061010d6102743660046110fb565b610519565b34801561028557600080fd5b506000546bffffffffffffffffffffffff1661012f565b3480156102a857600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff16610214565b3480156102d357600080fd5b5061012f610569565b3480156102e857600080fd5b5061010d6102f736600461116c565b61061f565b610304610743565b610345848484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107e092505050565b50505050565b600061035561085d565b6103608585856108de565b905061036f60408601866111d8565b90506000036103815761038185610a27565b61038a82610aef565b949350505050565b61039a610b5a565b6103a381610b62565b50565b60006103c760015473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff163460405160006040518083038185875af1925050503d806000811461041e576040519150601f19603f3d011682016040523d82523d6000602084013e610423565b606091505b50509050806103a357600080fd5b610439610743565b60015473ffffffffffffffffffffffffffffffffffffffff166040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b1580156104c457600080fd5b505af11580156104d8573d6000803e3d6000fd5b505050505050565b61030461085d565b6104f0610743565b73ffffffffffffffffffffffffffffffffffffffff909116600090815260026020526040902055565b610521610743565b60405173ffffffffffffffffffffffffffffffffffffffff83169082156108fc029083906000818181858888f19350505050158015610564573d6000803e3d6000fd5b505050565b600061058a60015473ffffffffffffffffffffffffffffffffffffffff1690565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff91909116906370a0823190602401602060405180830381865afa1580156105f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061a919061123d565b905090565b610627610743565b828114610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e677468730000000000000000000000000060448201526064015b60405180910390fd5b60005b8381101561073c5761072a8585838181106106b5576106b5611256565b90506020020160208101906106ca91906110d7565b60008585858181106106de576106de611256565b90506020028101906106f091906111d8565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107e092505050565b80610734816112b4565b915050610698565b5050505050565b6000546c01000000000000000000000000900473ffffffffffffffffffffffffffffffffffffffff1633148061077857503330145b6107de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e657200000000000000000000000000000000000000000000604482015260640161068c565b565b6000808473ffffffffffffffffffffffffffffffffffffffff16848460405161080991906112ec565b60006040518083038185875af1925050503d8060008114610846576040519150601f19603f3d011682016040523d82523d6000602084013e61084b565b606091505b50915091508161073c57805160208201fd5b60015473ffffffffffffffffffffffffffffffffffffffff1633146107de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161068c565b600080610938846040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050600061098a61094d6101408801886111d8565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508693925050610bf09050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600260205260408120549450909150839003610a1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6163636f756e743a2077726f6e67207369676e61747572650000000000000000604482015260640161068c565b50509392505050565b600080546020830135916bffffffffffffffffffffffff9091169080610a4c83611327565b91906101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506bffffffffffffffffffffffff16146103a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6163636f756e743a20696e76616c6964206e6f6e636500000000000000000000604482015260640161068c565b80156103a35760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d806000811461073c576040519150601f19603f3d011682016040523d82523d6000602084013e61073c565b6107de610743565b60015460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f450909c1478d09248269d4ad4fa8cba61ca3f50faed58c7aedefa51c7f62b83a90600090a3600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000806000610bff8585610c14565b91509150610c0c81610c59565b509392505050565b6000808251604103610c4a5760208301516040840151606085015160001a610c3e87828585610ead565b94509450505050610c52565b506000905060025b9250929050565b6000816004811115610c6d57610c6d611352565b03610c755750565b6001816004811115610c8957610c89611352565b03610cf0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161068c565b6002816004811115610d0457610d04611352565b03610d6b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161068c565b6003816004811115610d7f57610d7f611352565b03610e0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161068c565b6004816004811115610e2057610e20611352565b036103a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161068c565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610ee45750600090506003610fbc565b8460ff16601b14158015610efc57508460ff16601c14155b15610f0d5750600090506004610fbc565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610f61573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116610fb557600060019250925050610fbc565b9150600090505b94509492505050565b73ffffffffffffffffffffffffffffffffffffffff811681146103a357600080fd5b60008060008060608587031215610ffd57600080fd5b843561100881610fc5565b935060208501359250604085013567ffffffffffffffff8082111561102c57600080fd5b818701915087601f83011261104057600080fd5b81358181111561104f57600080fd5b88602082850101111561106157600080fd5b95989497505060200194505050565b6000806000806080858703121561108657600080fd5b843567ffffffffffffffff81111561109d57600080fd5b850161016081880312156110b057600080fd5b93506020850135925060408501356110c781610fc5565b9396929550929360600135925050565b6000602082840312156110e957600080fd5b81356110f481610fc5565b9392505050565b6000806040838503121561110e57600080fd5b823561111981610fc5565b946020939093013593505050565b60008083601f84011261113957600080fd5b50813567ffffffffffffffff81111561115157600080fd5b6020830191508360208260051b8501011115610c5257600080fd5b6000806000806040858703121561118257600080fd5b843567ffffffffffffffff8082111561119a57600080fd5b6111a688838901611127565b909650945060208701359150808211156111bf57600080fd5b506111cc87828801611127565b95989497509550505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261120d57600080fd5b83018035915067ffffffffffffffff82111561122857600080fd5b602001915036819003821315610c5257600080fd5b60006020828403121561124f57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112e5576112e5611285565b5060010190565b6000825160005b8181101561130d57602081860181015185830152016112f3565b8181111561131c576000828501525b509190910192915050565b60006bffffffffffffffffffffffff80831681810361134857611348611285565b6001019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212205f3d7a682e722f9e146d1be801e9a0a1e682cf98df2dd7c72beeb09c57ad74dc64736f6c634300080f0033";

type TestExpiryAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestExpiryAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestExpiryAccount__factory extends ContractFactory {
  constructor(...args: TestExpiryAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    anOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestExpiryAccount> {
    return super.deploy(
      anEntryPoint,
      anOwner,
      overrides || {}
    ) as Promise<TestExpiryAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    anOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(anEntryPoint, anOwner, overrides || {});
  }
  override attach(address: string): TestExpiryAccount {
    return super.attach(address) as TestExpiryAccount;
  }
  override connect(signer: Signer): TestExpiryAccount__factory {
    return super.connect(signer) as TestExpiryAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestExpiryAccountInterface {
    return new utils.Interface(_abi) as TestExpiryAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestExpiryAccount {
    return new Contract(address, _abi, signerOrProvider) as TestExpiryAccount;
  }
}
