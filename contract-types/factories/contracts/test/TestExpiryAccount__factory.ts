/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestExpiryAccount,
  TestExpiryAccountInterface,
} from "../../../contracts/test/TestExpiryAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldEntryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newEntryPoint",
        type: "address",
      },
    ],
    name: "EntryPointChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addTemporaryOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "exec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "execBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execFromEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerDeadlines",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newEntryPoint",
        type: "address",
      },
    ],
    name: "updateEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001951380380620019518339810160408190526200003491620001ec565b818181600160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806000600c6101000a8154816001600160a01b0302191690836001600160a01b03160217905550620000bf6040518060400160405280600d81526020016c14da5b5c1b195058d8dbdd5b9d609a1b815250620000d860201b6200093c1760201c565b50620000d090508160001962000126565b505062000283565b6200012381604051602401620000ef91906200022b565b60408051601f198184030181529190526020810180516001600160e01b0390811663104c13eb60e21b179091526200014c16565b50565b620001306200016d565b6001600160a01b03909116600090815260026020526040902055565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000546c0100000000000000000000000090046001600160a01b03163314806200019657503330145b620001d45760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b604482015260640160405180910390fd5b565b6001600160a01b03811681146200012357600080fd5b600080604083850312156200020057600080fd5b82516200020d81620001d6565b60208401519092506200022081620001d6565b809150509250929050565b600060208083528351808285015260005b818110156200025a578581018301518582016040015282016200023c565b818111156200026d576000604083870101525b50601f01601f1916929092016040019392505050565b6116be80620002936000396000f3fe6080604052600436106100e15760003560e01c80638da5cb5b1161007f578063affed0e011610059578063affed0e014610279578063b0d691fe1461028e578063c399ec88146102b9578063d0cb75fa146102ce57600080fd5b80638da5cb5b146101d7578063a3450e4414610239578063a9059cbb1461025957600080fd5b8063424a0b3e116100bb578063424a0b3e146101625780634a58db191461018f5780634d44560d1461019757806380c5c7d0146101b757600080fd5b80630565bb67146100ed5780630825d1fc1461010f5780631b71bb6e1461014257600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5061010d610108366004611290565b6102ee565b005b34801561011b57600080fd5b5061012f61012a366004611319565b61037b565b6040519081526020015b60405180910390f35b34801561014e57600080fd5b5061010d61015d366004611380565b6104ba565b34801561016e57600080fd5b5061012f61017d366004611380565b60026020526000908152604090205481565b61010d6104ce565b3480156101a357600080fd5b5061010d6101b23660046113a4565b610559565b3480156101c357600080fd5b5061010d6101d2366004611290565b610608565b3480156101e357600080fd5b50600054610214906c01000000000000000000000000900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610139565b34801561024557600080fd5b5061010d6102543660046113a4565b61064e565b34801561026557600080fd5b5061010d6102743660046113a4565b61067f565b34801561028557600080fd5b5061012f6106cf565b34801561029a57600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff16610214565b3480156102c557600080fd5b5061012f610724565b3480156102da57600080fd5b5061010d6102e9366004611415565b6107da565b6102f66109cb565b6103346040518060400160405280601281526020017f53696d706c654163636f756e742e65786563000000000000000000000000000081525061093c565b610375848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a6892505050565b50505050565b60006103bb6040518060400160405280602081526020017f737461727420426173654163636f756e742e76616c6964617465557365724f7081525061093c565b6103c3610ae5565b6104016040518060400160405280601881526020017f656e6420636865636b696e6720656e74727920706f696e74000000000000000081525061093c565b61040c858585610b66565b905061041b6040860186611481565b905060000361042d5761042d85610caf565b61046b6040518060400160405280601581526020017f656e6420636865636b696e6720646561646c696e65000000000000000000000081525061093c565b61047482610d77565b6104b26040518060400160405280600f81526020017f656e64205f70617950726566756e64000000000000000000000000000000000081525061093c565b949350505050565b6104c2610de2565b6104cb81610dea565b50565b60006104ef60015473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff163460405160006040518083038185875af1925050503d8060008114610546576040519150601f19603f3d011682016040523d82523d6000602084013e61054b565b606091505b50509050806104cb57600080fd5b6105616109cb565b60015473ffffffffffffffffffffffffffffffffffffffff166040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b1580156105ec57600080fd5b505af1158015610600573d6000803e3d6000fd5b505050505050565b6106466040518060400160405280602081526020017f53696d706c654163636f756e742e6578656346726f6d456e747279506f696e7481525061093c565b610334610ae5565b6106566109cb565b73ffffffffffffffffffffffffffffffffffffffff909116600090815260026020526040902055565b6106876109cb565b60405173ffffffffffffffffffffffffffffffffffffffff83169082156108fc029083906000818181858888f193505050501580156106ca573d6000803e3d6000fd5b505050565b600061070f6040518060400160405280600881526020017f6e6f6e63652e2e2e00000000000000000000000000000000000000000000000081525061093c565b506000546bffffffffffffffffffffffff1690565b600061074560015473ffffffffffffffffffffffffffffffffffffffff1690565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff91909116906370a0823190602401602060405180830381865afa1580156107b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d591906114e6565b905090565b6107e26109cb565b6108206040518060400160405280601781526020017f53696d706c654163636f756e742e65786563426174636800000000000000000081525061093c565b82811461088e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e677468730000000000000000000000000060448201526064015b60405180910390fd5b60005b83811015610935576109238585838181106108ae576108ae6114ff565b90506020020160208101906108c39190611380565b60008585858181106108d7576108d76114ff565b90506020028101906108e99190611481565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a6892505050565b8061092d8161155d565b915050610891565b5050505050565b6104cb8160405160240161095091906115c1565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac00000000000000000000000000000000000000000000000000000000179052610e78565b6000546c01000000000000000000000000900473ffffffffffffffffffffffffffffffffffffffff16331480610a0057503330145b610a66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152606401610885565b565b6000808473ffffffffffffffffffffffffffffffffffffffff168484604051610a919190611612565b60006040518083038185875af1925050503d8060008114610ace576040519150601f19603f3d011682016040523d82523d6000602084013e610ad3565b606091505b50915091508161093557805160208201fd5b60015473ffffffffffffffffffffffffffffffffffffffff163314610a66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401610885565b600080610bc0846040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b90506000610c12610bd5610140880188611481565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508693925050610e999050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600260205260408120549450909150839003610ca6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6163636f756e743a2077726f6e67207369676e617475726500000000000000006044820152606401610885565b50509392505050565b600080546020830135916bffffffffffffffffffffffff9091169080610cd48361162e565b91906101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506bffffffffffffffffffffffff16146104cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6163636f756e743a20696e76616c6964206e6f6e6365000000000000000000006044820152606401610885565b80156104cb5760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d8060008114610935576040519150601f19603f3d011682016040523d82523d6000602084013e610935565b610a666109cb565b60015460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f450909c1478d09248269d4ad4fa8cba61ca3f50faed58c7aedefa51c7f62b83a90600090a3600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000806000610ea88585610ebd565b91509150610eb581610f02565b509392505050565b6000808251604103610ef35760208301516040840151606085015160001a610ee787828585611156565b94509450505050610efb565b506000905060025b9250929050565b6000816004811115610f1657610f16611659565b03610f1e5750565b6001816004811115610f3257610f32611659565b03610f99576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610885565b6002816004811115610fad57610fad611659565b03611014576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610885565b600381600481111561102857611028611659565b036110b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610885565b60048160048111156110c9576110c9611659565b036104cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610885565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561118d5750600090506003611265565b8460ff16601b141580156111a557508460ff16601c14155b156111b65750600090506004611265565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561120a573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661125e57600060019250925050611265565b9150600090505b94509492505050565b73ffffffffffffffffffffffffffffffffffffffff811681146104cb57600080fd5b600080600080606085870312156112a657600080fd5b84356112b18161126e565b935060208501359250604085013567ffffffffffffffff808211156112d557600080fd5b818701915087601f8301126112e957600080fd5b8135818111156112f857600080fd5b88602082850101111561130a57600080fd5b95989497505060200194505050565b6000806000806080858703121561132f57600080fd5b843567ffffffffffffffff81111561134657600080fd5b8501610160818803121561135957600080fd5b93506020850135925060408501356113708161126e565b9396929550929360600135925050565b60006020828403121561139257600080fd5b813561139d8161126e565b9392505050565b600080604083850312156113b757600080fd5b82356113c28161126e565b946020939093013593505050565b60008083601f8401126113e257600080fd5b50813567ffffffffffffffff8111156113fa57600080fd5b6020830191508360208260051b8501011115610efb57600080fd5b6000806000806040858703121561142b57600080fd5b843567ffffffffffffffff8082111561144357600080fd5b61144f888389016113d0565b9096509450602087013591508082111561146857600080fd5b50611475878288016113d0565b95989497509550505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126114b657600080fd5b83018035915067ffffffffffffffff8211156114d157600080fd5b602001915036819003821315610efb57600080fd5b6000602082840312156114f857600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361158e5761158e61152e565b5060010190565b60005b838110156115b0578181015183820152602001611598565b838111156103755750506000910152565b60208152600082518060208401526115e0816040850160208701611595565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008251611624818460208701611595565b9190910192915050565b60006bffffffffffffffffffffffff80831681810361164f5761164f61152e565b6001019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea264697066735822122024d1f88c0f30035aa636ff416579f8e939f60ee613c3517799e9e2740cd92b9764736f6c634300080f0033";

type TestExpiryAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestExpiryAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestExpiryAccount__factory extends ContractFactory {
  constructor(...args: TestExpiryAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    anOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestExpiryAccount> {
    return super.deploy(
      anEntryPoint,
      anOwner,
      overrides || {}
    ) as Promise<TestExpiryAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    anOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(anEntryPoint, anOwner, overrides || {});
  }
  override attach(address: string): TestExpiryAccount {
    return super.attach(address) as TestExpiryAccount;
  }
  override connect(signer: Signer): TestExpiryAccount__factory {
    return super.connect(signer) as TestExpiryAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestExpiryAccountInterface {
    return new utils.Interface(_abi) as TestExpiryAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestExpiryAccount {
    return new Contract(address, _abi, signerOrProvider) as TestExpiryAccount;
  }
}
