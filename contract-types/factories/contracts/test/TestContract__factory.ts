/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestContract,
  TestContractInterface,
} from "../../../contracts/test/TestContract";

const _abi = [
  {
    inputs: [],
    name: "AnError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DoEvenLess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DoNothing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "Dynamic",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes8[]",
        name: "",
        type: "bytes8[]",
      },
    ],
    name: "Dynamic32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes2[]",
        name: "",
        type: "bytes2[]",
      },
    ],
    name: "DynamicDynamic32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "EmitTheSender",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "FnWithSingleParam",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "FnWithThreeParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "FnWithTwoMixedParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "FnWithTwoParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Receive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ReceiveEthAndDoNothing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ReceiveFallback",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "test",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "test2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "test3",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "test4",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "test5",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "test6",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "test7",
        type: "string",
      },
    ],
    name: "TestDynamic",
    type: "event",
  },
  {
    inputs: [],
    name: "doEvenLess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "doNothing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "first",
        type: "bytes",
      },
    ],
    name: "dynamic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8[]",
        name: "first",
        type: "bytes8[]",
      },
    ],
    name: "dynamic32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "first",
        type: "string",
      },
      {
        internalType: "bytes2[]",
        name: "second",
        type: "bytes2[]",
      },
    ],
    name: "dynamicDynamic32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emitTheSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fnThatReverts",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "p",
        type: "uint256",
      },
    ],
    name: "fnWithSingleParam",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    name: "fnWithThreeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "a",
        type: "bool",
      },
      {
        internalType: "string",
        name: "s",
        type: "string",
      },
    ],
    name: "fnWithTwoMixedParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "fnWithTwoParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveEthAndDoNothing",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "test2",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "test3",
        type: "string",
      },
      {
        internalType: "bool",
        name: "test4",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "test5",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "test6",
        type: "string",
      },
      {
        internalType: "string",
        name: "test7",
        type: "string",
      },
    ],
    name: "testDynamic",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610dfa806100206000396000f3fe6080604052600436106100e15760003560e01c80636a4e8f301161007f578063bd26450411610059578063bd2645041461026a578063d543852a1461028a578063e3744173146102aa578063fb7ec5b5146102ca57600080fd5b80636a4e8f301461022b5780636f52399e1461024057806372223e481461025557600080fd5b80632f576f20116100bb5780632f576f20146101c05780632f912fa1146101d557806340c10f19146101f55780635c2ce3601461022357600080fd5b8063192cf58c1461014957806322ad042e1461016b578063273454bf1461018b57600080fd5b36610144576040517f9f1b3bad61172afd7ac57ee5c5873e1c8fad6c4b8e0fe408853ffbd909aaa83090600090a16040513481527fda7d83adce6afb77a23621d798fdc5d4522f5e19632538a6197b179b220df0d39060200160405180910390a1005b600080fd5b34801561015557600080fd5b50610169610164366004610707565b6102ea565b005b34801561017757600080fd5b50610169610186366004610775565b610328565b34801561019757600080fd5b506101ab6101a63660046108b7565b610359565b60405190151581526020015b60405180910390f35b3480156101cc57600080fd5b506101696103ac565b3480156101e157600080fd5b506101696101f036600461098f565b610415565b34801561020157600080fd5b506102156102103660046109bb565b61045c565b6040519081526020016101b7565b6101696104b4565b34801561023757600080fd5b506101696104ea565b34801561024c57600080fd5b5061016961051c565b34801561026157600080fd5b5061016961054c565b34801561027657600080fd5b50610169610285366004610a42565b610577565b34801561029657600080fd5b506101696102a5366004610aae565b6105ba565b3480156102b657600080fd5b506101696102c5366004610ae4565b6105eb565b3480156102d657600080fd5b506101696102e5366004610b37565b61061e565b60408051838152602081018390527fd4cbd7c3e3de660f7e080e318585f2883c381bcce4171d2b40e437c168f0f57591015b60405180910390a15050565b7f8d0ee72ec84528d9dbd6f8b33d48294e15a334bdaff974c4427d1600aafcfce2828260405161031c929190610b50565b60007f177ff055a3d32dfc89433965c7594ae51f34616dcdc089e6b013f94799fd35ea888888888888886040516103969796959493929190610c29565b60405180910390a1506001979650505050505050565b6103ea6040518060400160405280600981526020017f646f4e6f7468696e670000000000000000000000000000000000000000000000815250610654565b6040517fdebca8641d6a3e24f2d68b21c2a70c1282afab0888c30b014ed143b90cb20aa190600090a1565b60408051848152602081018490529081018290527fc2cd290053212d60c0f05c8be12fbcaf500f0319a87d59460e63dcd506ad1866906060015b60405180910390a1505050565b6040805173ffffffffffffffffffffffffffffffffffffffff84168152602081018390526000917f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885910160405180910390a150919050565b6040513481527f5f13db7d203ec5ddf6f745c7d0f1664b174a00700f5a4475f4762be2d4453e62906020015b60405180910390a1565b6040517f7d1d8db700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040513381527fcf58ef68346aa2e95de25def197e41f124f0da9c267a54870f2d7306eb7c6109906020016104e0565b6040517f81a61eef099e179c19ede601377564f392855032790628b18479e314434de98f90600090a1565b7fb90d809d1ba43ca508adc3a44ac8992a8a1711b3f5daeb8e152d6d2f960f8a34848484846040516105ac9493929190610ce4565b60405180910390a150505050565b7f269d5c7aa3311ea7433293a56ccb466f615e7389222855917144406466db2186828260405161031c929190610d69565b7f9c5299ebb669c44463581ad98cb95331cda05845d91ca8249cef5de0dd6d435883838360405161044f93929190610d85565b6040518181527fb969d7697624f2851da52ab0857042ca6f4ee316ccff715d593ef4dd688205089060200160405180910390a150565b6106e3816040516024016106689190610daa565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac000000000000000000000000000000000000000000000000000000001790526106e6565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000806040838503121561071a57600080fd5b50508035926020909101359150565b60008083601f84011261073b57600080fd5b50813567ffffffffffffffff81111561075357600080fd5b6020830191508360208260051b850101111561076e57600080fd5b9250929050565b6000806020838503121561078857600080fd5b823567ffffffffffffffff81111561079f57600080fd5b6107ab85828601610729565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126107f757600080fd5b813567ffffffffffffffff80821115610812576108126107b7565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610858576108586107b7565b8160405283815286602085880101111561087157600080fd5b836020870160208301376000602085830101528094505050505092915050565b803580151581146108a157600080fd5b919050565b803560ff811681146108a157600080fd5b600080600080600080600060e0888a0312156108d257600080fd5b873567ffffffffffffffff808211156108ea57600080fd5b6108f68b838c016107e6565b985060208a0135975060408a013591508082111561091357600080fd5b61091f8b838c016107e6565b965061092d60608b01610891565b955061093b60808b016108a6565b945060a08a013591508082111561095157600080fd5b61095d8b838c016107e6565b935060c08a013591508082111561097357600080fd5b506109808a828b016107e6565b91505092959891949750929550565b6000806000606084860312156109a457600080fd5b505081359360208301359350604090920135919050565b600080604083850312156109ce57600080fd5b823573ffffffffffffffffffffffffffffffffffffffff811681146109f257600080fd5b946020939093013593505050565b60008083601f840112610a1257600080fd5b50813567ffffffffffffffff811115610a2a57600080fd5b60208301915083602082850101111561076e57600080fd5b60008060008060408587031215610a5857600080fd5b843567ffffffffffffffff80821115610a7057600080fd5b610a7c88838901610a00565b90965094506020870135915080821115610a9557600080fd5b50610aa287828801610729565b95989497509550505050565b60008060208385031215610ac157600080fd5b823567ffffffffffffffff811115610ad857600080fd5b6107ab85828601610a00565b600080600060408486031215610af957600080fd5b610b0284610891565b9250602084013567ffffffffffffffff811115610b1e57600080fd5b610b2a86828701610a00565b9497909650939450505050565b600060208284031215610b4957600080fd5b5035919050565b6020808252818101839052600090846040840183805b87811015610bb15783357fffffffffffffffff0000000000000000000000000000000000000000000000008116808214610b9e578384fd5b8452509284019291840191600101610b66565b5090979650505050505050565b6000815180845260005b81811015610be457602081850181015186830182015201610bc8565b81811115610bf6576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60e081526000610c3c60e083018a610bbe565b8860208401528281036040840152610c548189610bbe565b9050861515606084015260ff8616608084015282810360a0840152610c798186610bbe565b905082810360c0840152610c8d8185610bbe565b9a9950505050505050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b604081526000610cf8604083018688610c9b565b828103602084810191909152848252859181016000805b87811015610d5a5784357fffff0000000000000000000000000000000000000000000000000000000000008116808214610d47578384fd5b8452509383019391830191600101610d0f565b50909998505050505050505050565b602081526000610d7d602083018486610c9b565b949350505050565b8315158152604060208201526000610da1604083018486610c9b565b95945050505050565b602081526000610dbd6020830184610bbe565b939250505056fea2646970667358221220a1c8aabca4b8045bd8f99b9357d865f45d04a7acc1220103c693da94f8ad6a5964736f6c634300080f0033";

type TestContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestContract__factory extends ContractFactory {
  constructor(...args: TestContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestContract> {
    return super.deploy(overrides || {}) as Promise<TestContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestContract {
    return super.attach(address) as TestContract;
  }
  override connect(signer: Signer): TestContract__factory {
    return super.connect(signer) as TestContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestContractInterface {
    return new utils.Interface(_abi) as TestContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestContract {
    return new Contract(address, _abi, signerOrProvider) as TestContract;
  }
}
