/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestContract,
  TestContractInterface,
} from "../../../contracts/test/TestContract";

const _abi = [
  {
    inputs: [],
    name: "AnError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DoEvenLess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DoNothing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "Dynamic",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes8[]",
        name: "",
        type: "bytes8[]",
      },
    ],
    name: "Dynamic32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes2[]",
        name: "",
        type: "bytes2[]",
      },
    ],
    name: "DynamicDynamic32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "EmitTheSender",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "FnWithSingleParam",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "FnWithThreeParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "FnWithTwoMixedParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "FnWithTwoParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Receive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ReceiveEthAndDoNothing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ReceiveFallback",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "test",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "test2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "test3",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "test4",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "test5",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "test6",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "test7",
        type: "string",
      },
    ],
    name: "TestDynamic",
    type: "event",
  },
  {
    inputs: [],
    name: "doEvenLess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "doNothing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "first",
        type: "bytes",
      },
    ],
    name: "dynamic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8[]",
        name: "first",
        type: "bytes8[]",
      },
    ],
    name: "dynamic32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "first",
        type: "string",
      },
      {
        internalType: "bytes2[]",
        name: "second",
        type: "bytes2[]",
      },
    ],
    name: "dynamicDynamic32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emitTheSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fnThatReverts",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "p",
        type: "uint256",
      },
    ],
    name: "fnWithSingleParam",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    name: "fnWithThreeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "a",
        type: "bool",
      },
      {
        internalType: "string",
        name: "s",
        type: "string",
      },
    ],
    name: "fnWithTwoMixedParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "fnWithTwoParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveEthAndDoNothing",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "test2",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "test3",
        type: "string",
      },
      {
        internalType: "bool",
        name: "test4",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "test5",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "test6",
        type: "string",
      },
      {
        internalType: "string",
        name: "test7",
        type: "string",
      },
    ],
    name: "testDynamic",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610cef806100206000396000f3fe6080604052600436106100e15760003560e01c80636a4e8f301161007f578063bd26450411610059578063bd2645041461026a578063d543852a1461028a578063e3744173146102aa578063fb7ec5b5146102ca57600080fd5b80636a4e8f301461022b5780636f52399e1461024057806372223e481461025557600080fd5b80632f576f20116100bb5780632f576f20146101c05780632f912fa1146101d557806340c10f19146101f55780635c2ce3601461022357600080fd5b8063192cf58c1461014957806322ad042e1461016b578063273454bf1461018b57600080fd5b36610144576040517f9f1b3bad61172afd7ac57ee5c5873e1c8fad6c4b8e0fe408853ffbd909aaa83090600090a16040513481527fda7d83adce6afb77a23621d798fdc5d4522f5e19632538a6197b179b220df0d39060200160405180910390a1005b600080fd5b34801561015557600080fd5b50610169610164366004610616565b6102ea565b005b34801561017757600080fd5b50610169610186366004610684565b610328565b34801561019757600080fd5b506101ab6101a63660046107c6565b610359565b60405190151581526020015b60405180910390f35b3480156101cc57600080fd5b506101696103ac565b3480156101e157600080fd5b506101696101f036600461089e565b6103d7565b34801561020157600080fd5b506102156102103660046108ca565b61041e565b6040519081526020016101b7565b610169610476565b34801561023757600080fd5b506101696104ac565b34801561024c57600080fd5b506101696104de565b34801561026157600080fd5b5061016961050e565b34801561027657600080fd5b50610169610285366004610951565b610539565b34801561029657600080fd5b506101696102a53660046109bd565b61057c565b3480156102b657600080fd5b506101696102c53660046109f3565b6105ad565b3480156102d657600080fd5b506101696102e5366004610a46565b6105e0565b60408051838152602081018390527fd4cbd7c3e3de660f7e080e318585f2883c381bcce4171d2b40e437c168f0f57591015b60405180910390a15050565b7f8d0ee72ec84528d9dbd6f8b33d48294e15a334bdaff974c4427d1600aafcfce2828260405161031c929190610a5f565b60007f177ff055a3d32dfc89433965c7594ae51f34616dcdc089e6b013f94799fd35ea888888888888886040516103969796959493929190610b38565b60405180910390a1506001979650505050505050565b6040517fdebca8641d6a3e24f2d68b21c2a70c1282afab0888c30b014ed143b90cb20aa190600090a1565b60408051848152602081018490529081018290527fc2cd290053212d60c0f05c8be12fbcaf500f0319a87d59460e63dcd506ad1866906060015b60405180910390a1505050565b6040805173ffffffffffffffffffffffffffffffffffffffff84168152602081018390526000917f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885910160405180910390a150919050565b6040513481527f5f13db7d203ec5ddf6f745c7d0f1664b174a00700f5a4475f4762be2d4453e62906020015b60405180910390a1565b6040517f7d1d8db700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040513381527fcf58ef68346aa2e95de25def197e41f124f0da9c267a54870f2d7306eb7c6109906020016104a2565b6040517f81a61eef099e179c19ede601377564f392855032790628b18479e314434de98f90600090a1565b7fb90d809d1ba43ca508adc3a44ac8992a8a1711b3f5daeb8e152d6d2f960f8a348484848460405161056e9493929190610bf3565b60405180910390a150505050565b7f269d5c7aa3311ea7433293a56ccb466f615e7389222855917144406466db2186828260405161031c929190610c78565b7f9c5299ebb669c44463581ad98cb95331cda05845d91ca8249cef5de0dd6d435883838360405161041193929190610c94565b6040518181527fb969d7697624f2851da52ab0857042ca6f4ee316ccff715d593ef4dd688205089060200160405180910390a150565b6000806040838503121561062957600080fd5b50508035926020909101359150565b60008083601f84011261064a57600080fd5b50813567ffffffffffffffff81111561066257600080fd5b6020830191508360208260051b850101111561067d57600080fd5b9250929050565b6000806020838503121561069757600080fd5b823567ffffffffffffffff8111156106ae57600080fd5b6106ba85828601610638565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261070657600080fd5b813567ffffffffffffffff80821115610721576107216106c6565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610767576107676106c6565b8160405283815286602085880101111561078057600080fd5b836020870160208301376000602085830101528094505050505092915050565b803580151581146107b057600080fd5b919050565b803560ff811681146107b057600080fd5b600080600080600080600060e0888a0312156107e157600080fd5b873567ffffffffffffffff808211156107f957600080fd5b6108058b838c016106f5565b985060208a0135975060408a013591508082111561082257600080fd5b61082e8b838c016106f5565b965061083c60608b016107a0565b955061084a60808b016107b5565b945060a08a013591508082111561086057600080fd5b61086c8b838c016106f5565b935060c08a013591508082111561088257600080fd5b5061088f8a828b016106f5565b91505092959891949750929550565b6000806000606084860312156108b357600080fd5b505081359360208301359350604090920135919050565b600080604083850312156108dd57600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811461090157600080fd5b946020939093013593505050565b60008083601f84011261092157600080fd5b50813567ffffffffffffffff81111561093957600080fd5b60208301915083602082850101111561067d57600080fd5b6000806000806040858703121561096757600080fd5b843567ffffffffffffffff8082111561097f57600080fd5b61098b8883890161090f565b909650945060208701359150808211156109a457600080fd5b506109b187828801610638565b95989497509550505050565b600080602083850312156109d057600080fd5b823567ffffffffffffffff8111156109e757600080fd5b6106ba8582860161090f565b600080600060408486031215610a0857600080fd5b610a11846107a0565b9250602084013567ffffffffffffffff811115610a2d57600080fd5b610a398682870161090f565b9497909650939450505050565b600060208284031215610a5857600080fd5b5035919050565b6020808252818101839052600090846040840183805b87811015610ac05783357fffffffffffffffff0000000000000000000000000000000000000000000000008116808214610aad578384fd5b8452509284019291840191600101610a75565b5090979650505050505050565b6000815180845260005b81811015610af357602081850181015186830182015201610ad7565b81811115610b05576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60e081526000610b4b60e083018a610acd565b8860208401528281036040840152610b638189610acd565b9050861515606084015260ff8616608084015282810360a0840152610b888186610acd565b905082810360c0840152610b9c8185610acd565b9a9950505050505050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b604081526000610c07604083018688610baa565b828103602084810191909152848252859181016000805b87811015610c695784357fffff0000000000000000000000000000000000000000000000000000000000008116808214610c56578384fd5b8452509383019391830191600101610c1e565b50909998505050505050505050565b602081526000610c8c602083018486610baa565b949350505050565b8315158152604060208201526000610cb0604083018486610baa565b9594505050505056fea2646970667358221220623730591b3f617ad7eb1b810f38970f9b0eac9b0faebfdfba24170ded14b5f064736f6c634300080f0033";

type TestContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestContract__factory extends ContractFactory {
  constructor(...args: TestContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestContract> {
    return super.deploy(overrides || {}) as Promise<TestContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestContract {
    return super.attach(address) as TestContract;
  }
  override connect(signer: Signer): TestContract__factory {
    return super.connect(signer) as TestContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestContractInterface {
    return new utils.Interface(_abi) as TestContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestContract {
    return new Contract(address, _abi, signerOrProvider) as TestContract;
  }
}
